@namespace Shadcn.Components.Tabs

@inject ILogger<TabsTrigger> Logger

<button type="button"
class="@GetClasses()"
@onclick="() => ParentTabs?.SetActiveTab(Value)"
disabled="@Disabled"
@attributes="AdditionalAttributes">
    @ChildContent
</button>

@code {
    [CascadingParameter] Tabs? ParentTabs { get; set; }
    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string GetClasses() {
        bool isActive = ParentTabs?.Value == Value;
        return CnHelper.Cn([
            "inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
            isActive ? "bg-background text-foreground shadow" : "",
            Class
        ]);
    }
}
