@using Microsoft.AspNetCore.Components

<div @attributes="AdditionalAttributes" data-state="@(isChecked ? "checked" : "unchecked")" class="inline-flex cursor-pointer items-center" @onclick="Toggle">
    <div class="relative">
        <!-- Controlando a cor e animações diretamente no atributo class -->
        <div class="h-8 w-14 rounded-full transition-colors duration-300 data-[state=checked]:bg-primary data-[state=unchecked]:bg-gray-300"
             data-state="@(isChecked ? "checked" : "unchecked")">
            <div data-state="@(isChecked ? "checked" : "unchecked")" class="absolute left-1 top-1 h-6 w-6 rounded-full bg-white shadow-lg transition-transform duration-300 data-[state=checked]:translate-x-6 data-[state=unchecked]:translate-x-0">
            </div>
        </div>
    </div>
</div>

@code {
    private bool isChecked = false;

    [Parameter] public EventCallback<bool> IsCheckedChanged { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; } // Atributos adicionais

    private async Task Toggle() {
        isChecked = !isChecked;
        await IsCheckedChanged.InvokeAsync(isChecked); // Notifica o componente pai sobre a mudança de estado
        StateHasChanged();
    }
}
